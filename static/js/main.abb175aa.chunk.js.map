{"version":3,"sources":["actions.js","reducers.js","configureStore.js","components/SearchBar.js","containers/SearchBar.js","components/Pagination.js","containers/Pagination.js","components/ResultTable.js","containers/ResultTable.js","components/LoadingPage.js","components/Dialog.js","containers/Dialog.js","containers/Main.js","containers/Root.js","serviceWorker.js","index.js"],"names":["SEARCH_RESULT","SEARCH_REPOSITORY","CLEAN_SEARCH_REPOSITORY","ERROR_HANDEL","LOADING_ON","LOADING_OFF","fetchSuceess","resData","inputContent","type","data","Object","objectSpread","errorHandle","failText","fetchRespositorySuccess","resBranch","resCommit","repositoryName","showLoadingPage","hideLoadingPage","fetchSearchRepository","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","response","wrap","_context","prev","next","fetch","concat","sent","t0","t1","json","t2","t3","t4","t5","stop","_x","apply","this","arguments","fetchOtherPageRepository","pageNumber","queryString","_ref2","_callee2","_context2","_x2","fetchRepositoryInformation","ownerName","_ref3","_callee3","resultBranch","resultCommit","_context3","t6","_x3","cleanSearchRepository","rootReducer","combineReducers","dataStore","state","length","undefined","SearchResultList","PaginationCount","ResponsitoryDetail","QueryString","ErrorMessage","Loading","Dialog","BranchList","CommitList","RepositoryName","action","_action$data","total_count","items","pagination_count","Math","ceil","newSearchResultList","map","item","name","OwnerName","owner","login","CreatedDate","Moment","created_at","format","UpdatedDate","updated_at","StarCount","stargazers_count","Watchers","watchers","_action$data2","slice","commit","message","console","error","pageControl","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","configureStore","preloadedState","createStore","applyMiddleware","thunkMiddleware","styles","Form","width","margin","SearchMain","marginTop","Input","padding","Button","marginLeft","SearchBar","react_default","createElement","style","htmlFor","id","placeholder","onKeyUp","props","handleEnter","onChange","onClick","handleSearch","Component","Header","paddingTop","initialState","searchText","_this","changeContent","e","setState","target","value","keyCode","SearchBar_SearchBar","connect","searchResult","SearchResult","bindActionCreators","ActionCenter","Main","position","right","Item","display","border","cursor","textAlign","userSelect","Effect","background","color","Pagination","renderListItem","pageState","handleClick","NowPage","TotalPage","renderEffectItem","renderItem","inputNumber","react","_this$props","_this$props$pageState","handleChangePage","numberPage","nextProps","nextState","nowTotalPage","paginationCount","nextTotalPage","nowQueryString","isChange","Pagination_Pagination","table","tableCell","ResultTable","resultHead","sortTable","resultItem","keyNumber","getRepositoryInfo","key","_this2","searchResultList","stateResultList","reverse","inputName","_this$state","sortBy","nowResultList","nextResultList","ResultTable_ResultTable","LoadingPage","top","left","backgroundColor","height","justifyContent","alignItems","Tital","List","overflow","bottom","lineHeight","_this$props$data","handleClose","BackgroundPage","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","dialogInformation","Dialog_Dialog","boxSizing","loadingStatus","dialogStatus","containers_SearchBar","containers_ResultTable","containers_Pagination","LoadingPage_LoadingPage","containers_Dialog","store","Root","es","containers_Main","Boolean","location","hostname","match","ReactDOM","render","containers_Root","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gyBAAaA,EAAgB,eAChBC,EAAoB,oBACpBC,EAA0B,0BAC1BC,EAAe,eACfC,EAAa,aACbC,EAAc,cAErBC,EAAe,SAACC,EAASC,GAAV,MAA4B,CAC/CC,KAAMT,EACNU,KAAKC,OAAAC,EAAA,EAAAD,CAAA,GAAMJ,EAAP,CAAgBC,mBAGhBK,EAAc,SAAAC,GAAQ,MAAK,CAC/BL,KAAMN,EACNO,KAAMI,IAGFC,EAA0B,SAACC,EAAWC,EAAWC,GAAvB,MAA2C,CACzET,KAAMR,EACNS,KAAM,CACJM,YACAC,YACAC,oBAIEC,EAAkB,iBAAO,CAAEV,KAAML,IACjCgB,EAAkB,iBAAO,CAAEX,KAAMJ,IAE1BgB,EAAwB,SAAAb,GAAY,sBAAAc,EAAAX,OAAAY,EAAA,EAAAZ,CAAAa,EAAAC,EAAAC,KAAI,SAAAC,EAAMC,GAAN,IAAAC,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAEjDJ,EAAST,KAFwCY,EAAAE,KAAA,EAG1BC,MAAK,gDAAAC,OACsB3B,EADtB,wBAHqB,cAG3CqB,EAH2CE,EAAAK,KAAAL,EAAAM,GAMjDT,EANiDG,EAAAO,GAMxChC,EANwCyB,EAAAE,KAAA,EAMrBJ,EAASU,OANY,OAAAR,EAAAS,GAAAT,EAAAK,KAAAL,EAAAU,GAMJjC,EANIuB,EAAAW,IAAA,EAAAX,EAAAO,IAAAP,EAAAS,GAAAT,EAAAU,KAAA,EAAAV,EAAAM,IAAAN,EAAAW,IAOjDd,EAASR,KAPwCW,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAY,GAAAZ,EAAA,SASjDH,EAASf,EAAWkB,EAAAY,KAT6B,yBAAAZ,EAAAa,SAAAjB,EAAA,kBAAJ,gBAAAkB,GAAA,OAAAvB,EAAAwB,MAAAC,KAAAC,YAAA,IAapCC,EAA2B,SACtCC,EACAC,GAFsC,sBAAAC,EAAAzC,OAAAY,EAAA,EAAAZ,CAAAa,EAAAC,EAAAC,KAGnC,SAAA2B,EAAMzB,GAAN,IAAAC,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAAwB,GAAA,cAAAA,EAAAtB,KAAAsB,EAAArB,MAAA,cAAAqB,EAAAtB,KAAA,EAEDJ,EAAST,KAFRmC,EAAArB,KAAA,EAGsBC,MAAK,gDAAAC,OACsBgB,EADtB,UAAAhB,OAC0Ce,EAD1C,iBAH3B,cAGKrB,EAHLyB,EAAAlB,KAAAkB,EAAAjB,GAMDT,EANC0B,EAAAhB,GAMQhC,EANRgD,EAAArB,KAAA,EAM2BJ,EAASU,OANpC,OAAAe,EAAAd,GAAAc,EAAAlB,KAAAkB,EAAAb,GAM4CU,EAN5CG,EAAAZ,IAAA,EAAAY,EAAAhB,IAAAgB,EAAAd,GAAAc,EAAAb,KAAA,EAAAa,EAAAjB,IAAAiB,EAAAZ,IAODd,EAASR,KAPRkC,EAAArB,KAAA,iBAAAqB,EAAAtB,KAAA,GAAAsB,EAAAX,GAAAW,EAAA,SASD1B,EAASf,EAAWyC,EAAAX,KATnB,yBAAAW,EAAAV,SAAAS,EAAA,kBAHmC,gBAAAE,GAAA,OAAAH,EAAAN,MAAAC,KAAAC,YAAA,IAgB3BQ,EAA6B,SACxCtC,EACAuC,GAFwC,sBAAAC,EAAA/C,OAAAY,EAAA,EAAAZ,CAAAa,EAAAC,EAAAC,KAGrC,SAAAiC,EAAM/B,GAAN,IAAAgC,EAAAC,EAAA,OAAArC,EAAAC,EAAAK,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,cAAA6B,EAAA9B,KAAA,EAEDJ,EAAST,KAFR2C,EAAA7B,KAAA,EAG0BC,MAAK,gCAAAC,OACEsB,EADF,KAAAtB,OACejB,EADf,cAH/B,cAGK0C,EAHLE,EAAA1B,KAAA0B,EAAA7B,KAAA,EAO0BC,MAAK,gCAAAC,OACEsB,EADF,KAAAtB,OACejB,EADf,aAP/B,cAOK2C,EAPLC,EAAA1B,KAAA0B,EAAAzB,GAUDT,EAVCkC,EAAAxB,GAWCvB,EAXD+C,EAAA7B,KAAA,GAYS2B,EAAarB,OAZtB,eAAAuB,EAAAtB,GAAAsB,EAAA1B,KAAA0B,EAAA7B,KAAA,GAaS4B,EAAatB,OAbtB,QAAAuB,EAAArB,GAAAqB,EAAA1B,KAAA0B,EAAApB,GAcGxB,EAdH4C,EAAAnB,IAAA,EAAAmB,EAAAxB,IAAAwB,EAAAtB,GAAAsB,EAAArB,GAAAqB,EAAApB,KAAA,EAAAoB,EAAAzB,IAAAyB,EAAAnB,IAiBDf,EAASR,KAjBR0C,EAAA7B,KAAA,iBAAA6B,EAAA9B,KAAA,GAAA8B,EAAAC,GAAAD,EAAA,SAmBDlC,EAASf,EAAWiD,EAAAC,KAnBnB,yBAAAD,EAAAlB,SAAAe,EAAA,kBAHqC,gBAAAK,GAAA,OAAAN,EAAAZ,MAAAC,KAAAC,YAAA,IA0B7BiB,EAAwB,iBAAO,CAC1CxD,KAAMP,IC0BR,IAEegE,EAFKC,YAAgB,CAAEC,UApGtC,WAeE,IAdAC,EAcArB,UAAAsB,OAAA,QAAAC,IAAAvB,UAAA,GAAAA,UAAA,GAdQ,CACNwB,iBAAkB,GAClBC,gBAAiB,EACjBC,mBAAoB,GACpBC,YAAa,GACbC,aAAc,GACdC,SAAS,EACTC,OAAQ,CACNC,WAAY,GACZC,WAAY,GACZC,eAAgB,KAGpBC,EACAlC,UAAAsB,OAAA,EAAAtB,UAAA,QAAAuB,EACA,OAAQW,EAAOzE,MACb,KAAKT,EAAL,IAAAmF,EAC+CD,EAAOxE,KAA5C0E,EADVD,EACUC,YAAa5E,EADvB2E,EACuB3E,aAAc6E,EADrCF,EACqCE,MAC7BC,EAAmBC,KAAKC,KAAKJ,EAAc,IAC3CK,EAAsBJ,EAAMK,IAAI,SAAAC,GACpC,MAAO,CACLV,eAAgBU,EAAKC,KACrBC,UAAWF,EAAKG,MAAMC,MACtBC,YAAaC,IAAON,EAAKO,YAAYC,OAAO,cAC5CC,YAAaH,IAAON,EAAKU,YAAYF,OAAO,cAC5CG,UAAWX,EAAKY,iBAChBC,SAAUb,EAAKc,YAGnB,OAAO9F,OAAAC,EAAA,EAAAD,CAAA,GACF0D,EADL,CAEEG,iBAAkBiB,EAClBhB,gBAAiBa,EAAmB,IAAM,IAAMA,EAChDX,YAAanE,IAGjB,KAAKP,EAAL,IAAAyG,EAGMxB,EADFxE,KAAQM,EAFZ0F,EAEY1F,UAAWC,EAFvByF,EAEuBzF,UAAWC,EAFlCwF,EAEkCxF,eAGhC,OAAOP,OAAAC,EAAA,EAAAD,CAAA,GACF0D,EADL,CAEES,OAAQ,CACNC,WAAY/D,EAAU0E,IAAI,SAAAC,GAAI,OAAIA,EAAKC,OAAMe,MAAM,EAAG,IACtD3B,WAAY/D,EAAUyE,IAAI,SAAAC,GAAI,OAAIA,EAAKiB,OAAOC,UAASF,MAAM,EAAG,IAChE1B,eAAgB/D,KAGtB,KAAKhB,EACH,OAAOS,OAAAC,EAAA,EAAAD,CAAA,GACF0D,EADL,CAEES,OAAQ,CACNC,WAAY,GACZC,WAAY,GACZC,eAAgB,MAGtB,KAAK9E,EAEH,OADA2G,QAAQC,MAAR,gBAAA5E,OAA8B+C,EAAOxE,OAC9B2D,EACT,QACE,OAAOA,IAqCoC2C,YAjCjD,WAME,IALA3C,EAKArB,UAAAsB,OAAA,QAAAC,IAAAvB,UAAA,GAAAA,UAAA,GALQ,CACN6B,SAAS,EACTC,QAAQ,GAIV,QADA9B,UAAAsB,OAAA,EAAAtB,UAAA,QAAAuB,GACe9D,MACb,KAAKL,EACH,OAAOO,OAAAC,EAAA,EAAAD,CAAA,GACF0D,EADL,CAEEQ,SAAS,IAEb,KAAKxE,EACH,OAAOM,OAAAC,EAAA,EAAAD,CAAA,GACF0D,EADL,CAEEQ,SAAS,IAEb,KAAK5E,EACH,OAAOU,OAAAC,EAAA,EAAAD,CAAA,GACF0D,EADL,CAEES,QAAQ,IAEZ,KAAK5E,EACH,OAAOS,OAAAC,EAAA,EAAAD,CAAA,GACF0D,EADL,CAEES,QAAQ,IAEZ,QACE,OAAOT,MCvGP4C,EAAmBC,OAAOC,sCAAwCC,IASzDC,MARf,SAAwBC,GACtB,OAAOC,YACLrD,EACAoD,EACAL,EAAiBO,YAAgBC,2CCP/BC,EAAS,CACbC,KAAM,CACJC,MAAO,OACPC,OAAQ,UAEVC,WAAY,CACVC,UAAW,OAEbC,MAAO,CACLC,QAAS,OAEXC,OAAQ,CACNC,WAAY,MACZF,QAAS,QAIQG,mLAEjB,OACEC,EAAA5G,EAAA6G,cAAA,OAAKC,MAAOb,EAAOC,MACjBU,EAAA5G,EAAA6G,cAAA,SAAOE,QAAQ,gBAAf,4BACAH,EAAA5G,EAAA6G,cAAA,OAAKC,MAAOb,EAAOI,YACjBO,EAAA5G,EAAA6G,cAAA,SACEC,MAAOb,EAAOM,MACdS,GAAG,eACHhI,KAAK,OACLmF,KAAK,eACL8C,YAAY,SACZC,QAAS5F,KAAK6F,MAAMC,YACpBC,SAAU/F,KAAK6F,MAAME,WAEvBT,EAAA5G,EAAA6G,cAAA,UACEC,MAAOb,EAAOQ,OACdzH,KAAK,SACLmF,KAAK,gBACLmD,QAAShG,KAAK6F,MAAMI,cAJtB,mBAf6BC,aCbjCvB,EAAS,CACbwB,OAAQ,CACNC,WAAY,QAIVf,6MACJgB,aAAe,CACbC,WAAY,MAEdhF,MAAQiF,EAAKF,eAEbG,cAAgB,SAAAC,GAAC,OAAIF,EAAKG,SAAS,CAAEJ,WAAYG,EAAEE,OAAOC,WAC1Dd,YAAc,SAAAW,GACM,KAAdA,EAAEI,SAAgBN,EAAKN,kBAE7BA,aAAe,WAAM,IACXK,EAAeC,EAAKjF,MAApBgF,WACNA,GAAcC,EAAKV,MAAMvH,sBAAsBgI,4EAIjD,OACEhB,EAAA5G,EAAA6G,cAAA,UAAQC,MAAOb,EAAOwB,QACpBb,EAAA5G,EAAA6G,cAACuB,EAAD,CACEhB,YAAa9F,KAAK8F,YAClBG,aAAcjG,KAAKiG,aACnBF,SAAU/F,KAAKwG,wBArBDN,aAoCTa,cARS,SAAAzF,GAAK,MAAK,CAChC0F,aAAc1F,EAAMD,UAAU4F,eAGL,SAAApI,GACzB,OAAOqI,YAAmBC,EAActI,IAG3BkI,CAGb1B,GCjDIV,EAAS,CACbyC,KAAM,CACJC,SAAU,WACVC,MAAO,QAETC,KAAM,CACJC,QAAS,eACTC,OAAQ,kBACR3C,OAAQ,EACR4C,OAAQ,UACR7C,MAAO,GACP8C,UAAW,SACXC,WAAY,QAEdC,OAAQ,CACNL,QAAS,eACTC,OAAQ,kBACR3C,OAAQ,EACRD,MAAO,GACP8C,UAAW,SACXD,OAAQ,UACRI,WAAY,QACZC,MAAO,QACPH,WAAY,SAIKI,6MACnBC,eAAiB,SAAA1J,GAAgC,IAA7B2J,EAA6B3J,EAA7B2J,UAAWC,EAAkB5J,EAAlB4J,YACrBC,EAAuBF,EAAvBE,QAASC,EAAcH,EAAdG,UACXC,EAAmB,WACvB,OAAOhD,EAAA5G,EAAA6G,cAAA,MAAIC,MAAOb,EAAOkD,QAASO,IAE9BG,EAAa,SAAAC,GACjB,OAAOA,GAAeH,EACpB/C,EAAA5G,EAAA6G,cAAA,MAAIC,MAAOb,EAAO4C,KAAMvB,QAAS,kBAAMmC,EAAYK,KAChDA,GAED,MAEN,OAAQJ,GACN,KAAK,EACH,OACE9C,EAAA5G,EAAA6G,cAACkD,EAAA,SAAD,KACGH,IACAC,EAAW,GACXA,EAAW,GACXA,EAAW,GACXA,EAAW,IAGlB,KAAK,EACH,OACEjD,EAAA5G,EAAA6G,cAACkD,EAAA,SAAD,KACGF,EAAW,GACXD,IACAC,EAAW,GACXA,EAAW,GACXA,EAAW,IAGlB,KAAKF,EAAY,EACf,OACE/C,EAAA5G,EAAA6G,cAACkD,EAAA,SAAD,KACGF,EAAWH,EAAU,GACrBG,EAAWH,EAAU,GACrBG,EAAWH,EAAU,GACrBE,IACAC,EAAWH,EAAU,IAI5B,KAAKC,EACH,OACE/C,EAAA5G,EAAA6G,cAACkD,EAAA,SAAD,KACGF,EAAWH,EAAU,GACrBG,EAAWH,EAAU,GACrBG,EAAWH,EAAU,GACrBG,EAAWH,EAAU,GACrBE,KAIP,QACE,OACEhD,EAAA5G,EAAA6G,cAACkD,EAAA,SAAD,KACGF,EAAWH,EAAU,GACrBG,EAAWH,EAAU,GACrBE,IACAC,EAAWH,EAAU,GACrBG,EAAWH,EAAU,8EAKvB,IAAAM,EAIH1I,KAAK6F,MAJF8C,EAAAD,EAELR,UAAaE,EAFRO,EAEQP,QAASC,EAFjBM,EAEiBN,UACtBF,EAHKO,EAGLP,YAEF,OAAkB,IAAdE,EAAwB,KAE1B/C,EAAA5G,EAAA6G,cAAA,MAAIC,MAAOb,EAAOyC,MAChB9B,EAAA5G,EAAA6G,cAAA,MACEC,MAAOb,EAAO4C,KACdvB,QAAS,kBAAkB,IAAZoC,GAAiBD,EAAYC,EAAU,KAFxD,QAMCpI,KAAKiI,eAAejI,KAAK6F,OAC1BP,EAAA5G,EAAA6G,cAAA,MACEC,MAAOb,EAAO4C,KACdvB,QAAS,kBAAMoC,EAAUC,GAAaF,EAAYC,EAAU,KAF9D,gBAnFgClC,aCvBlC8B,6MACJ1G,MAAQ,CACN8G,QAAS,EACTC,UAAW,KAGbO,iBAAmB,SAAAC,GAAc,IAAAH,EACmBnC,EAAKV,MAA/C3F,EADuBwI,EACvBxI,yBAA0BE,EADHsI,EACGtI,YAClCmG,EAAKG,SAAS,CAAE0B,QAASS,IACzB3I,EAAyB2I,EAAYzI,yFAGjB0I,EAAWC,GAC/B,IAAMC,EAAehJ,KAAK6F,MAAMoD,gBAC1BC,EAAgBJ,EAAUG,gBAC1BE,EAAiBnJ,KAAK6F,MAAMzF,YAE9BgJ,GAAW,EASf,OARID,IAFoBL,EAAU1I,aAE2B,KAAnB+I,IACxCnJ,KAAK0G,SAAS,CAAE0B,QAAS,IACzBgB,GAAW,GAETJ,IAAiBE,IACnBlJ,KAAK0G,SAAS,CAAE2B,UAAWa,IAC3BE,GAAW,IAELA,mCAIR,OACE9D,EAAA5G,EAAA6G,cAACkD,EAAA,SAAD,KACEnD,EAAA5G,EAAA6G,cAAC8D,EAAD,CACEnB,UAAWlI,KAAKsB,MAChB6G,YAAanI,KAAK4I,2BAlCH1C,aAkDVa,cATS,SAAAzF,GAAK,MAAK,CAChC2H,gBAAiB3H,EAAMD,UAAUK,gBACjCtB,YAAakB,EAAMD,UAAUO,cAGJ,SAAA/C,GACzB,OAAOqI,YAAmBC,EAActI,IAG3BkI,CAGbiB,WCzDIrD,EAAS,CACb2E,MAAO,CACLxE,OAAQ,aAEVyE,UAAW,CACT9B,OAAQ,kBACRvC,QAAS,EACTyC,UAAW,WAIM6B,6MACnBC,WAAa,WAAM,IACTC,EAAcnD,EAAKV,MAAnB6D,UACR,OACEpE,EAAA5G,EAAA6G,cAAA,aACED,EAAA5G,EAAA6G,cAAA,UACED,EAAA5G,EAAA6G,cAAA,MAAIC,MAAOb,EAAO4E,WAAlB,MACAjE,EAAA5G,EAAA6G,cAAA,MACEC,MAAOb,EAAO4E,UACdvD,QAAS,kBAAM0D,EAAU,oBAF3B,mBAMApE,EAAA5G,EAAA6G,cAAA,MAAIC,MAAOb,EAAO4E,UAAWvD,QAAS,kBAAM0D,EAAU,eAAtD,cAGApE,EAAA5G,EAAA6G,cAAA,MAAIC,MAAOb,EAAO4E,UAAWvD,QAAS,kBAAM0D,EAAU,iBAAtD,gBAGApE,EAAA5G,EAAA6G,cAAA,MAAIC,MAAOb,EAAO4E,UAAWvD,QAAS,kBAAM0D,EAAU,iBAAtD,gBAGApE,EAAA5G,EAAA6G,cAAA,MAAIC,MAAOb,EAAO4E,UAAWvD,QAAS,kBAAM0D,EAAU,eAAtD,cAGApE,EAAA5G,EAAA6G,cAAA,MAAIC,MAAOb,EAAO4E,UAAWvD,QAAS,kBAAM0D,EAAU,cAAtD,iBAORC,WAAa,SAAC/G,EAAMgH,GAAc,IACxBC,EAAsBtD,EAAKV,MAA3BgE,kBACR,OACEvE,EAAA5G,EAAA6G,cAAA,MACEuE,IAAKF,EACL5D,QAAS,kBAAM6D,EAAkBjH,EAAKV,eAAgBU,EAAKE,aAE3DwC,EAAA5G,EAAA6G,cAAA,MAAIC,MAAOb,EAAO4E,WAAYK,EAAY,GAC1CtE,EAAA5G,EAAA6G,cAAA,MAAIC,MAAOb,EAAO4E,WAAY3G,EAAKV,gBACnCoD,EAAA5G,EAAA6G,cAAA,MAAIC,MAAOb,EAAO4E,WAAY3G,EAAKE,WACnCwC,EAAA5G,EAAA6G,cAAA,MAAIC,MAAOb,EAAO4E,WAAY3G,EAAKK,aACnCqC,EAAA5G,EAAA6G,cAAA,MAAIC,MAAOb,EAAO4E,WAAY3G,EAAKS,aACnCiC,EAAA5G,EAAA6G,cAAA,MAAIC,MAAOb,EAAO4E,WAAY3G,EAAKW,WACnC+B,EAAA5G,EAAA6G,cAAA,MAAIC,MAAOb,EAAO4E,WAAY3G,EAAKa,oFAIhC,IAAAsG,EAAA/J,KACCgK,EAAqBhK,KAAK6F,MAA1BmE,iBACR,OAAgC,IAA5BA,EAAiBzI,OAAqB,KAExC+D,EAAA5G,EAAA6G,cAAA,SAAOC,MAAOb,EAAO2E,OAClBtJ,KAAKyJ,aACNnE,EAAA5G,EAAA6G,cAAA,aACGyE,EAAiBrH,IAAI,SAACC,EAAMkH,GAC3B,OAAOC,EAAKJ,WAAW/G,EAAMkH,cAzDA5D,aCNnCsD,6MACJlI,MAAQ,CACN2I,gBAAiB,GACjBpH,KAAM,GACNqH,SAAS,KAGXR,UAAY,SAAAS,GAAa,IAAAC,EACoB7D,EAAKjF,MAAxC2I,EADeG,EACfH,gBAAiBpH,EADFuH,EACEvH,KAAMqH,EADRE,EACQF,QAC/B,OAAIC,IAActH,EACT0D,EAAKG,SAAS,CACnBuD,gBAAiBA,EAAgBC,UACjCrH,KAAMsH,EACND,SAAUA,IAEP3D,EAAKG,SAAS,CACnBuD,gBAAiBI,iBAAOJ,EAAiBE,GACzCtH,KAAMsH,EACND,SAAS,OAIbL,kBAAoB,SAAC1L,EAAgBuC,IAEnCD,EADuC8F,EAAKV,MAApCpF,4BACmBtC,EAAgBuC,yFAGvBoI,EAAWC,GAC/B,IAAMuB,EAAgBtK,KAAK6F,MAAMmE,iBAC3BO,EAAiBzB,EAAUkB,iBACjC,OAAIM,IAAkBC,IACpBvK,KAAK0G,SAAS,CAAEuD,gBAAiBM,KAC1B,oCAIF,IACCN,EAAoBjK,KAAKsB,MAAzB2I,gBACR,OACE3E,EAAA5G,EAAA6G,cAAA,WACED,EAAA5G,EAAA6G,cAACiF,EAAD,CACER,iBAAkBC,EAClBP,UAAW1J,KAAK0J,UAChBG,kBAAmB7J,KAAK6J,4BA3CR3D,aAyDXa,cAPS,SAAAzF,GAAK,MAAK,CAChC0I,iBAAkB1I,EAAMD,UAAUI,mBAGT,SAAA5C,GAAQ,OACjCqI,YAAmBC,EAActI,IAEpBkI,CAGbyC,GCjEI7E,GAAS,CACb8F,YAAa,CACXpD,SAAU,QACVqD,IAAK,EACLC,KAAM,EACNC,gBAAiB,0BACjB/F,MAAO,QACPgG,OAAQ,QACRrD,QAAS,OACTsD,eAAgB,SAChBC,WAAY,WAIKN,oLAEjB,OACEnF,EAAA5G,EAAA6G,cAAA,OAAKC,MAAOb,GAAO8F,aACjBnF,EAAA5G,EAAA6G,cAAA,8BAJiCW,aCdnCvB,GAAS,CACbyC,KAAM,CACJvC,MAAO,IACPgG,OAAQ,IACR/C,WAAY,QACZT,SAAU,YAEZ2D,MAAO,CACLnG,MAAO,OACPC,OAAQ,IAEVmG,KAAM,CACJJ,OAAQ,IACRhG,MAAO,OACPqG,SAAU,OACVzD,OAAQ,iBAEVF,KAAM,CACJrC,QAAS,IAEXC,OAAQ,CACNkC,SAAU,WACV8D,OAAQ,EACRP,gBAAiB,cACjBQ,WAAY,MAIKrJ,8MACnBkG,eAAiB,SAACrF,EAAMkH,GAAP,OACfxE,EAAA5G,EAAA6G,cAAA,MAAIC,MAAOb,GAAO4C,KAAMuC,IAAKA,GAA7B,GAAA1K,OAAsC0K,EAAM,EAA5C,MAAA1K,OAAkDwD,6EAE3C,IAAAmH,EAAA/J,KAAAqL,EAC4CrL,KAAK6F,MAAMlI,KAAtDuE,EADDmJ,EACCnJ,eAAgBF,EADjBqJ,EACiBrJ,WAAYC,EAD7BoJ,EAC6BpJ,WAC5BqJ,EAAgBtL,KAAK6F,MAArByF,YACR,OACEhG,EAAA5G,EAAA6G,cAAA,OAAKC,MAAOb,GAAOyC,MACjB9B,EAAA5G,EAAA6G,cAAA,OAAKC,MAAOb,GAAOqG,OAAnB,GAAA5L,OAA8B8C,EAA9B,oCACAoD,EAAA5G,EAAA6G,cAAA,MAAIC,MAAOb,GAAOsG,MACfjJ,EAAWW,IAAI,SAACC,EAAMkH,GAAP,OAAeC,EAAK9B,eAAerF,EAAMkH,MAE3DxE,EAAA5G,EAAA6G,cAAA,OACEC,MAAOb,GAAOqG,OADhB,GAAA5L,OAEK8C,EAFL,uCAGAoD,EAAA5G,EAAA6G,cAAA,MAAIC,MAAOb,GAAOsG,MACfhJ,EAAWU,IAAI,SAACC,EAAMkH,GAAP,OAAeC,EAAK9B,eAAerF,EAAMkH,MAE3DxE,EAAA5G,EAAA6G,cAAA,UAAQC,MAAOb,GAAOQ,OAAQa,QAASsF,GAAvC,iBAnB4BpF,aCzB9BvB,GAAS,CACb4G,eAAgB,CACdlE,SAAU,QACVqD,IAAK,EACLC,KAAM,EACNC,gBAAiB,0BACjB/F,MAAO,QACPgG,OAAQ,QACRrD,QAAS,OACTsD,eAAgB,SAChBC,WAAY,WAGHhJ,GAAb,SAAAyJ,GAAA,SAAAzJ,IAAA,OAAAnE,OAAA6N,EAAA,EAAA7N,CAAAoC,KAAA+B,GAAAnE,OAAA8N,EAAA,EAAA9N,CAAAoC,KAAApC,OAAA+N,EAAA,EAAA/N,CAAAmE,GAAAhC,MAAAC,KAAAC,YAAA,OAAArC,OAAAgO,EAAA,EAAAhO,CAAAmE,EAAAyJ,GAAA5N,OAAAiO,EAAA,EAAAjO,CAAAmE,EAAA,EAAA+H,IAAA,SAAAlD,MAAA,WACW,IAAA8B,EAC8C1I,KAAK6F,MAAlDiG,EADDpD,EACCoD,kBAAmB5K,EADpBwH,EACoBxH,sBAC3B,OACEoE,EAAA5G,EAAA6G,cAAA,OAAKC,MAAOb,GAAO4G,gBACjBjG,EAAA5G,EAAA6G,cAACwG,GAAD,CACEpO,KAAMmO,EACNR,YAAapK,SAPvBa,EAAA,CAA4BmE,aAqBba,eAPS,SAAAzF,GAAK,MAAK,CAChCwK,kBAAmBxK,EAAMD,UAAUU,SAGV,SAAAlD,GAAQ,OACjCqI,YAAmBC,EAActI,IAEpBkI,CAGbhF,IClCI4C,GAAS,CACbyC,KAAM,CACJ4E,UAAW,aACXnH,MAAO,QACPgG,OAAQ,UAICzD,GAAb,SAAAoE,GAAA,SAAApE,IAAA,OAAAxJ,OAAA6N,EAAA,EAAA7N,CAAAoC,KAAAoH,GAAAxJ,OAAA8N,EAAA,EAAA9N,CAAAoC,KAAApC,OAAA+N,EAAA,EAAA/N,CAAAwJ,GAAArH,MAAAC,KAAAC,YAAA,OAAArC,OAAAgO,EAAA,EAAAhO,CAAAwJ,EAAAoE,GAAA5N,OAAAiO,EAAA,EAAAjO,CAAAwJ,EAAA,EAAA0C,IAAA,SAAAlD,MAAA,WACW,IAAA8B,EACiC1I,KAAK6F,MAArCoG,EADDvD,EACCuD,cAAeC,EADhBxD,EACgBwD,aACvB,OACE5G,EAAA5G,EAAA6G,cAAA,OAAKC,MAAOb,GAAOyC,MACjB9B,EAAA5G,EAAA6G,cAAC4G,EAAD,MACA7G,EAAA5G,EAAA6G,cAAC6G,EAAD,MACA9G,EAAA5G,EAAA6G,cAAC8G,EAAD,MACCJ,GAAiB3G,EAAA5G,EAAA6G,cAAC+G,GAAD,MACjBJ,GAAgB5G,EAAA5G,EAAA6G,cAACgH,GAAD,WATzBnF,EAAA,CAA0BlB,aAsBXa,eAPS,SAAAzF,GAAK,MAAK,CAChC2K,cAAe3K,EAAM2C,YAAYnC,QACjCoK,aAAc5K,EAAM2C,YAAYlC,SAGP,GAEZgF,CAGbK,ICpCIoF,GAAQlI,IAUCmI,OARf,WACE,OACEnH,EAAA5G,EAAA6G,cAACmH,EAAA,EAAD,CAAUF,MAAOA,IACflH,EAAA5G,EAAA6G,cAACoH,GAAD,QCEcC,QACW,cAA7BzI,OAAO0I,SAASC,UAEe,UAA7B3I,OAAO0I,SAASC,UAEhB3I,OAAO0I,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO3H,EAAA5G,EAAA6G,cAAC2H,GAAD,MAAUC,SAASC,eAAe,SD0H5C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.abb175aa.chunk.js","sourcesContent":["export const SEARCH_RESULT = 'SEACH/RESULT'\nexport const SEARCH_REPOSITORY = 'SEARCH/REPOSITORY'\nexport const CLEAN_SEARCH_REPOSITORY = 'SEARCH/CLEAN_REPOSITORY'\nexport const ERROR_HANDEL = 'ERROR/HANDLE'\nexport const LOADING_ON = 'LOADING/ON'\nexport const LOADING_OFF = 'LOADING/OFF'\n\nconst fetchSuceess = (resData, inputContent) => ({\n  type: SEARCH_RESULT,\n  data: { ...resData, inputContent },\n})\n\nconst errorHandle = failText => ({\n  type: ERROR_HANDEL,\n  data: failText,\n})\n\nconst fetchRespositorySuccess = (resBranch, resCommit, repositoryName) => ({\n  type: SEARCH_REPOSITORY,\n  data: {\n    resBranch,\n    resCommit,\n    repositoryName,\n  },\n})\n\nconst showLoadingPage = () => ({ type: LOADING_ON })\nconst hideLoadingPage = () => ({ type: LOADING_OFF })\n\nexport const fetchSearchRepository = inputContent => async dispatch => {\n  try {\n    dispatch(showLoadingPage())\n    const response = await fetch(\n      `https://api.github.com/search/repositories?q=${inputContent}&page=1&per_page=10`\n    )\n    dispatch(fetchSuceess(await response.json(), inputContent))\n    dispatch(hideLoadingPage())\n  } catch (err) {\n    dispatch(errorHandle(err))\n  }\n}\n\nexport const fetchOtherPageRepository = (\n  pageNumber,\n  queryString\n) => async dispatch => {\n  try {\n    dispatch(showLoadingPage())\n    const response = await fetch(\n      `https://api.github.com/search/repositories?q=${queryString}&page=${pageNumber}&per_page=10`\n    )\n    dispatch(fetchSuceess(await response.json(), queryString))\n    dispatch(hideLoadingPage())\n  } catch (err) {\n    dispatch(errorHandle(err))\n  }\n}\n\nexport const fetchRepositoryInformation = (\n  repositoryName,\n  ownerName\n) => async dispatch => {\n  try {\n    dispatch(showLoadingPage())\n    const resultBranch = await fetch(\n      `https://api.github.com/repos/${ownerName}/${repositoryName}/branches`\n    )\n\n    const resultCommit = await fetch(\n      `https://api.github.com/repos/${ownerName}/${repositoryName}/commits`\n    )\n    dispatch(\n      fetchRespositorySuccess(\n        await resultBranch.json(),\n        await resultCommit.json(),\n        repositoryName\n      )\n    )\n    dispatch(hideLoadingPage())\n  } catch (err) {\n    dispatch(errorHandle(err))\n  }\n}\n\nexport const cleanSearchRepository = () => ({\n  type: CLEAN_SEARCH_REPOSITORY,\n})\n","import { combineReducers } from 'redux'\nimport Moment from 'moment'\nimport {\n  SEARCH_RESULT,\n  SEARCH_REPOSITORY,\n  CLEAN_SEARCH_REPOSITORY,\n  ERROR_HANDEL,\n  LOADING_ON,\n  LOADING_OFF,\n} from './actions'\n\nfunction dataStore(\n  state = {\n    SearchResultList: [],\n    PaginationCount: 0,\n    ResponsitoryDetail: {},\n    QueryString: '',\n    ErrorMessage: '',\n    Loading: false,\n    Dialog: {\n      BranchList: [],\n      CommitList: [],\n      RepositoryName: '',\n    },\n  },\n  action\n) {\n  switch (action.type) {\n    case SEARCH_RESULT:\n      const { total_count, inputContent, items } = action.data\n      const pagination_count = Math.ceil(total_count / 10)\n      const newSearchResultList = items.map(item => {\n        return {\n          RepositoryName: item.name,\n          OwnerName: item.owner.login,\n          CreatedDate: Moment(item.created_at).format('YYYY/MM/DD'),\n          UpdatedDate: Moment(item.updated_at).format('YYYY/MM/DD'),\n          StarCount: item.stargazers_count,\n          Watchers: item.watchers,\n        }\n      })\n      return {\n        ...state,\n        SearchResultList: newSearchResultList,\n        PaginationCount: pagination_count > 100 ? 100 : pagination_count,\n        QueryString: inputContent,\n      }\n\n    case SEARCH_REPOSITORY:\n      const {\n        data: { resBranch, resCommit, repositoryName },\n      } = action\n\n      return {\n        ...state,\n        Dialog: {\n          BranchList: resBranch.map(item => item.name).slice(0, 10),\n          CommitList: resCommit.map(item => item.commit.message).slice(0, 10),\n          RepositoryName: repositoryName,\n        },\n      }\n    case CLEAN_SEARCH_REPOSITORY:\n      return {\n        ...state,\n        Dialog: {\n          BranchList: [],\n          CommitList: [],\n          RepositoryName: '',\n        },\n      }\n    case ERROR_HANDEL:\n      console.error(`ERROR_HANDEL ${action.data}`)\n      return state\n    default:\n      return state\n  }\n}\n\nfunction pageControl(\n  state = {\n    Loading: false,\n    Dialog: false,\n  },\n  action\n) {\n  switch (action.type) {\n    case LOADING_ON:\n      return {\n        ...state,\n        Loading: true,\n      }\n    case LOADING_OFF:\n      return {\n        ...state,\n        Loading: false,\n      }\n    case SEARCH_REPOSITORY:\n      return {\n        ...state,\n        Dialog: true,\n      }\n    case CLEAN_SEARCH_REPOSITORY:\n      return {\n        ...state,\n        Dialog: false,\n      }\n    default:\n      return state\n  }\n}\n\nconst rootReducer = combineReducers({ dataStore, pageControl })\n\nexport default rootReducer\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport rootReducer from './reducers'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nfunction configureStore(preloadedState) {\n  return createStore(\n    rootReducer,\n    preloadedState,\n    composeEnhancers(applyMiddleware(thunkMiddleware))\n  )\n}\n\nexport default configureStore\n","import React, { Component } from 'react'\n\nconst styles = {\n  Form: {\n    width: '50vw',\n    margin: '0 auto',\n  },\n  SearchMain: {\n    marginTop: '1vh',\n  },\n  Input: {\n    padding: '5px',\n  },\n  Button: {\n    marginLeft: '5px',\n    padding: '5px',\n  },\n}\n\nexport default class SearchBar extends Component {\n  render() {\n    return (\n      <div style={styles.Form}>\n        <label htmlFor=\"search_input\">Github Repository Search</label>\n        <div style={styles.SearchMain}>\n          <input\n            style={styles.Input}\n            id=\"search_input\"\n            type=\"text\"\n            name=\"search_input\"\n            placeholder=\"Search\"\n            onKeyUp={this.props.handleEnter}\n            onChange={this.props.onChange}\n          />\n          <button\n            style={styles.Button}\n            type=\"submit\"\n            name=\"search_submit\"\n            onClick={this.props.handleSearch}\n          >\n            Search\n          </button>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as ActionCenter from '../actions'\nimport SearchBarItem from '../components/SearchBar'\n\nconst styles = {\n  Header: {\n    paddingTop: '10%',\n  },\n}\n\nclass SearchBar extends Component {\n  initialState = {\n    searchText: '',\n  }\n  state = this.initialState\n\n  changeContent = e => this.setState({ searchText: e.target.value })\n  handleEnter = e => {\n    if (e.keyCode === 13) this.handleSearch()\n  }\n  handleSearch = () => {\n    const { searchText } = this.state\n    !!searchText && this.props.fetchSearchRepository(searchText)\n  }\n\n  render() {\n    return (\n      <header style={styles.Header}>\n        <SearchBarItem\n          handleEnter={this.handleEnter}\n          handleSearch={this.handleSearch}\n          onChange={this.changeContent}\n        />\n      </header>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  searchResult: state.dataStore.SearchResult,\n})\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(ActionCenter, dispatch)\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SearchBar)\n","import React, { Component, Fragment } from 'react'\n\nconst styles = {\n  Main: {\n    position: 'absolute',\n    right: '10vw',\n  },\n  Item: {\n    display: 'inline-block',\n    border: '1px solid black',\n    margin: 5,\n    cursor: 'pointer',\n    width: 50,\n    textAlign: 'center',\n    userSelect: 'none',\n  },\n  Effect: {\n    display: 'inline-block',\n    border: '1px solid black',\n    margin: 5,\n    width: 50,\n    textAlign: 'center',\n    cursor: 'default',\n    background: 'black',\n    color: 'white',\n    userSelect: 'none',\n  },\n}\n\nexport default class Pagination extends Component {\n  renderListItem = ({ pageState, handleClick }) => {\n    const { NowPage, TotalPage } = pageState\n    const renderEffectItem = () => {\n      return <li style={styles.Effect}>{NowPage}</li>\n    }\n    const renderItem = inputNumber => {\n      return inputNumber <= TotalPage ? (\n        <li style={styles.Item} onClick={() => handleClick(inputNumber)}>\n          {inputNumber}\n        </li>\n      ) : null\n    }\n    switch (NowPage) {\n      case 1:\n        return (\n          <Fragment>\n            {renderEffectItem()}\n            {renderItem(2)}\n            {renderItem(3)}\n            {renderItem(4)}\n            {renderItem(5)}\n          </Fragment>\n        )\n      case 2:\n        return (\n          <Fragment>\n            {renderItem(1)}\n            {renderEffectItem()}\n            {renderItem(3)}\n            {renderItem(4)}\n            {renderItem(5)}\n          </Fragment>\n        )\n      case TotalPage - 1:\n        return (\n          <Fragment>\n            {renderItem(NowPage - 3)}\n            {renderItem(NowPage - 2)}\n            {renderItem(NowPage - 1)}\n            {renderEffectItem()}\n            {renderItem(NowPage + 1)}\n          </Fragment>\n        )\n\n      case TotalPage:\n        return (\n          <Fragment>\n            {renderItem(NowPage - 4)}\n            {renderItem(NowPage - 3)}\n            {renderItem(NowPage - 2)}\n            {renderItem(NowPage - 1)}\n            {renderEffectItem()}\n          </Fragment>\n        )\n\n      default:\n        return (\n          <Fragment>\n            {renderItem(NowPage - 2)}\n            {renderItem(NowPage - 1)}\n            {renderEffectItem()}\n            {renderItem(NowPage + 1)}\n            {renderItem(NowPage + 2)}\n          </Fragment>\n        )\n    }\n  }\n  render() {\n    const {\n      pageState: { NowPage, TotalPage },\n      handleClick,\n    } = this.props\n    if (TotalPage === 0) return null\n    return (\n      <ul style={styles.Main}>\n        <li\n          style={styles.Item}\n          onClick={() => NowPage !== 1 && handleClick(NowPage - 1)}\n        >\n          PREV\n        </li>\n        {this.renderListItem(this.props)}\n        <li\n          style={styles.Item}\n          onClick={() => NowPage < TotalPage && handleClick(NowPage + 1)}\n        >\n          NEXT\n        </li>\n      </ul>\n    )\n  }\n}\n","import React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as ActionCenter from '../actions'\nimport PaginationItem from '../components/Pagination'\n\nclass Pagination extends Component {\n  state = {\n    NowPage: 1,\n    TotalPage: 0,\n  }\n\n  handleChangePage = numberPage => {\n    const { fetchOtherPageRepository, queryString } = this.props\n    this.setState({ NowPage: numberPage })\n    fetchOtherPageRepository(numberPage, queryString)\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const nowTotalPage = this.props.paginationCount\n    const nextTotalPage = nextProps.paginationCount\n    const nowQueryString = this.props.queryString\n    const nextQueryString = nextProps.queryString\n    let isChange = false\n    if (nowQueryString !== nextQueryString && nowQueryString !== '') {\n      this.setState({ NowPage: 1 })\n      isChange = true\n    }\n    if (nowTotalPage !== nextTotalPage) {\n      this.setState({ TotalPage: nextTotalPage })\n      isChange = true\n    }\n    return !isChange\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <PaginationItem\n          pageState={this.state}\n          handleClick={this.handleChangePage}\n        />\n      </Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  paginationCount: state.dataStore.PaginationCount,\n  queryString: state.dataStore.QueryString,\n})\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(ActionCenter, dispatch)\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Pagination)\n","import React, { Component } from 'react'\n\nconst styles = {\n  table: {\n    margin: '20px auto',\n  },\n  tableCell: {\n    border: '1px solid black',\n    padding: 5,\n    textAlign: 'center',\n  },\n}\n\nexport default class ResultTable extends Component {\n  resultHead = () => {\n    const { sortTable } = this.props\n    return (\n      <thead>\n        <tr>\n          <th style={styles.tableCell}>No</th>\n          <th\n            style={styles.tableCell}\n            onClick={() => sortTable('RepositoryName')}\n          >\n            Repository Name\n          </th>\n          <th style={styles.tableCell} onClick={() => sortTable('OwnerName')}>\n            Owner Name\n          </th>\n          <th style={styles.tableCell} onClick={() => sortTable('CreatedDate')}>\n            Created Date\n          </th>\n          <th style={styles.tableCell} onClick={() => sortTable('UpdatedDate')}>\n            Updated Date\n          </th>\n          <th style={styles.tableCell} onClick={() => sortTable('StarCount')}>\n            Star Count\n          </th>\n          <th style={styles.tableCell} onClick={() => sortTable('Watchers')}>\n            Watchers\n          </th>\n        </tr>\n      </thead>\n    )\n  }\n  resultItem = (item, keyNumber) => {\n    const { getRepositoryInfo } = this.props\n    return (\n      <tr\n        key={keyNumber}\n        onClick={() => getRepositoryInfo(item.RepositoryName, item.OwnerName)}\n      >\n        <td style={styles.tableCell}>{keyNumber + 1}</td>\n        <td style={styles.tableCell}>{item.RepositoryName}</td>\n        <td style={styles.tableCell}>{item.OwnerName}</td>\n        <td style={styles.tableCell}>{item.CreatedDate}</td>\n        <td style={styles.tableCell}>{item.UpdatedDate}</td>\n        <td style={styles.tableCell}>{item.StarCount}</td>\n        <td style={styles.tableCell}>{item.Watchers}</td>\n      </tr>\n    )\n  }\n  render() {\n    const { searchResultList } = this.props\n    if (searchResultList.length === 0) return null\n    return (\n      <table style={styles.table}>\n        {this.resultHead()}\n        <tbody>\n          {searchResultList.map((item, key) => {\n            return this.resultItem(item, key)\n          })}\n        </tbody>\n      </table>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { sortBy } from 'lodash'\nimport * as ActionCenter from '../actions'\nimport ResultTableItem from '../components/ResultTable'\n\nclass ResultTable extends Component {\n  state = {\n    stateResultList: [],\n    name: '',\n    reverse: false,\n  }\n\n  sortTable = inputName => {\n    const { stateResultList, name, reverse } = this.state\n    if (inputName === name)\n      return this.setState({\n        stateResultList: stateResultList.reverse(),\n        name: inputName,\n        reverse: !reverse,\n      })\n    return this.setState({\n      stateResultList: sortBy(stateResultList, inputName),\n      name: inputName,\n      reverse: false,\n    })\n  }\n\n  getRepositoryInfo = (repositoryName, ownerName) => {\n    const { fetchRepositoryInformation } = this.props\n    fetchRepositoryInformation(repositoryName, ownerName)\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const nowResultList = this.props.searchResultList\n    const nextResultList = nextProps.searchResultList\n    if (nowResultList !== nextResultList) {\n      this.setState({ stateResultList: nextResultList })\n      return false\n    }\n    return true\n  }\n  render() {\n    const { stateResultList } = this.state\n    return (\n      <div>\n        <ResultTableItem\n          searchResultList={stateResultList}\n          sortTable={this.sortTable}\n          getRepositoryInfo={this.getRepositoryInfo}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  searchResultList: state.dataStore.SearchResultList,\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(ActionCenter, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ResultTable)\n","import React, { Component } from 'react'\n\nconst styles = {\n  LoadingPage: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    backgroundColor: 'rgba(50, 115, 220, 0.3)',\n    width: '100vw',\n    height: '100vh',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n}\n\nexport default class LoadingPage extends Component {\n  render() {\n    return (\n      <div style={styles.LoadingPage}>\n        <div>Loading</div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nconst styles = {\n  Main: {\n    width: 700,\n    height: 400,\n    background: 'white',\n    position: 'relative',\n  },\n  Tital: {\n    width: 'auto',\n    margin: 10,\n  },\n  List: {\n    height: 150,\n    width: 'auto',\n    overflow: 'auto',\n    border: '1px solid red',\n  },\n  Item: {\n    padding: 10,\n  },\n  Button: {\n    position: 'absolute',\n    bottom: 0,\n    backgroundColor: 'deepskyblue',\n    lineHeight: 1.5,\n  },\n}\n\nexport default class Dialog extends Component {\n  renderListItem = (item, key) => (\n    <li style={styles.Item} key={key}>{`${key + 1}: ${item}`}</li>\n  )\n  render() {\n    const { RepositoryName, BranchList, CommitList } = this.props.data\n    const { handleClose } = this.props\n    return (\n      <div style={styles.Main}>\n        <div style={styles.Tital}>{`${RepositoryName} 前十筆 Branch Name`}</div>\n        <ol style={styles.List}>\n          {BranchList.map((item, key) => this.renderListItem(item, key))}\n        </ol>\n        <div\n          style={styles.Tital}\n        >{`${RepositoryName} 前十筆 Commit Message`}</div>\n        <ol style={styles.List}>\n          {CommitList.map((item, key) => this.renderListItem(item, key))}\n        </ol>\n        <button style={styles.Button} onClick={handleClose}>\n          close\n        </button>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as ActionCenter from '../actions'\nimport DialogItem from '../components/Dialog'\nconst styles = {\n  BackgroundPage: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    backgroundColor: 'rgba(50, 115, 220, 0.3)',\n    width: '100vw',\n    height: '100vh',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n}\nexport class Dialog extends Component {\n  render() {\n    const { dialogInformation, cleanSearchRepository } = this.props\n    return (\n      <div style={styles.BackgroundPage}>\n        <DialogItem\n          data={dialogInformation}\n          handleClose={cleanSearchRepository}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  dialogInformation: state.dataStore.Dialog,\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(ActionCenter, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Dialog)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport SearchBar from './SearchBar'\nimport Pagination from './Pagination'\nimport ResultTable from './ResultTable'\nimport LoadingPage from '../components/LoadingPage'\nimport Dialog from './Dialog'\n\nconst styles = {\n  Main: {\n    boxSizing: 'border-box',\n    width: '100vw',\n    height: '100vh',\n  },\n}\n\nexport class Main extends Component {\n  render() {\n    const { loadingStatus, dialogStatus } = this.props\n    return (\n      <div style={styles.Main}>\n        <SearchBar />\n        <ResultTable />\n        <Pagination />\n        {loadingStatus && <LoadingPage />}\n        {dialogStatus && <Dialog />}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  loadingStatus: state.pageControl.Loading,\n  dialogStatus: state.pageControl.Dialog,\n})\n\nconst mapDispatchToProps = {}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Main)\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport configureStore from '../configureStore'\nimport Main from './Main'\n\nconst store = configureStore()\n\nfunction Root() {\n  return (\n    <Provider store={store}>\n      <Main />\n    </Provider>\n  )\n}\n\nexport default Root\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport './reset.css'\nimport Root from './containers/Root'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<Root />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}